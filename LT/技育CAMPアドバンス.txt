NKCヤギ係の言の葉を食べるヤギについて発表を始めたいと思います！
このQRコードからやぎたちと遊ぶことができるので、ぜひ遊んでみて下さい！！

では発表を始めます。

今のことどもたちはマスクをしての生活が当たり前だった日々を過ごしていました。
それは子供たちが感情を読み取る力に悪い影響があるという研究結果が出ています
そこで私たちはchat GPT×教育ということで
子供たちに、言葉の感情を楽しく正しく覚えてもらいたいと思い、この言の葉を食べるやぎを開発しました！！
	
言の葉を食べるヤギは
言葉を入力しそれをChatGPTにより感情を数値化します

その数値に対応した言の葉を生成しヤギが食べます！

食べた感情によりヤギが変化します

できたものがこちらになります
言葉を入力するとこのように言の葉が生成され
やぎがそれを数回食べるとこのようにヤギが変化します


そこで今回追加開発として、
ゲーム性の拡大、性能の向上を行いました。

その理由として実際に言の葉を食べるやぎを遊んでもらった結果
育てるきっかけがない（なにに育てたらいいかわからない）
すぐに飽きてしまう
明らかに違う感情の言の葉が出る
生成物の生成が遅い
という指摘を受けたためこのような追加開発を行いました！

ゲーム性の拡大では前回まではヤギを育成するモードしかなく育てるきっかけがありませんでした
そこで今回戦うモードを追加しその問題を解決しました。

またヤギにスキンを着せることや背景変更ができるようになりました！
これは前回まではヤギは喜怒哀楽の４種類背景は１種類しかなく
すぐに飽きてしまう事がありました。
そこでヤギのスキンや背景画像を追加し問題を解決しました。

これらにより必要な
モンスター、ヤギスキン、夜背景、森背景、海背景などを追加しました！

続いて性能改善として
まず明らかに違う感情が出てしまう問題について解決するため
GPTに送っていたプロンプトを このように変更し正しい感情値を返却されるように改善しました

次にレスポンスの向上として
前回までは毎回CHATGPTに感情値の返却を求めており、レスポンスに多くの時間が使われていました。
そこで今回ではfirestoreを使用し、入力した言葉とChat GPTからの感情値をキャッシュし
次回以降同じ文字が入力された際、firestoreから値を返却することで約50％以上高速化することができました！

システム構成はこのように
バックエンドではfirebasenodeｊｓ
フロントエンドではREact vite TS MUI
で開発を行いました！

また、今回４人が一年生ということで、このように初挑戦の技術がほとんどになっています

また今回ＣＤ／ＣＩの自動化まで行うことができました


また今回4人がチーム開発初めてということ400近いコミット数まで開発をすることができました！


ご清聴ありがとうございました